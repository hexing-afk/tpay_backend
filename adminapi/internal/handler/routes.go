// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	admin "tpay_backend/adminapi/internal/handler/admin"
	export "tpay_backend/adminapi/internal/handler/export"
	login "tpay_backend/adminapi/internal/handler/login"
	merchant "tpay_backend/adminapi/internal/handler/merchant"
	order "tpay_backend/adminapi/internal/handler/order"
	public "tpay_backend/adminapi/internal/handler/public"
	"tpay_backend/adminapi/internal/svc"

	"github.com/tal-tech/go-zero/rest"
)

func RegisterHandlers(engine *rest.Server, serverCtx *svc.ServiceContext) {
	engine.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: login.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/get-captcha",
				Handler: login.GetCaptchaHandler(serverCtx),
			},
		},
	)

	engine.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckLogin},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/admin/list",
					Handler: admin.GetAdminListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/admin/add",
					Handler: admin.AddAdminHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/admin/enable",
					Handler: admin.EnableAdminHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/admin/reset",
					Handler: admin.ResetAdminPwdHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/admin/reset-totp-secret",
					Handler: admin.ResetAdminTotpSecretHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/admin/modify-pwd",
					Handler: admin.ModifyAdminPasswordHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/platform/bank-card/list",
					Handler: admin.GetPlatformBankCardListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/platform/bank-card",
					Handler: admin.GetPlatformBankCardHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/platform/bank-card/add",
					Handler: admin.AddPlatformBankCardHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/platform/bank-card/modify",
					Handler: admin.ModifyPlatformBankCardHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/platform/bank-card/enable",
					Handler: admin.EnablePlatformBankCardHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/platform/bank-card/delete",
					Handler: admin.DeletePlatformBankCardHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/area/list",
					Handler: admin.AreaListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/upstream/add",
					Handler: admin.AddUpstreamHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/upstream/modify",
					Handler: admin.ModifyUpstreamHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/upstream/list",
					Handler: admin.GetUpstreamListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/upstream",
					Handler: admin.GetUpstreamHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/upstream/balance",
					Handler: admin.GetUpstreamBalanceHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/upstream/channel/add",
					Handler: admin.AddUpstreamChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/upstream/channel/modify",
					Handler: admin.ModifyUpstreamChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/upstream/channel/list",
					Handler: admin.GetUpstreamChannelListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/upstream/channel",
					Handler: admin.GetUpstreamChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/upstream/channel/config",
					Handler: admin.GetUpstreamChannelConfigHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/upstream/channel/config/save",
					Handler: admin.SaveUpstreamChannelConfigHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/upstream/channel/enable",
					Handler: admin.EnableUpstreamChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/upstream/channel/delete",
					Handler: admin.DeleteUpstreamChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/platform/channel/list",
					Handler: admin.GetPlatformChannelListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/platform/channel/add",
					Handler: admin.AddPlatformChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/platform/channel/modify",
					Handler: admin.ModifyPlatformChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/platform/channel/enable",
					Handler: admin.EnablePlatformChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/platform/channel/delete",
					Handler: admin.DeletePlatformChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/platform-channel/upstream/list",
					Handler: admin.GetPlatformUpstreamListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/platform-channel/upstream/save",
					Handler: admin.SavePlatformUpstreamHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/platform-wallet-log/list",
					Handler: admin.PlatformWalletLogListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/platform-channel/setting",
					Handler: admin.PlanformChannelSettingHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/platform-channel/setting",
					Handler: admin.GetPlanformChannelSettingHandler(serverCtx),
				},
			}...,
		),
	)

	engine.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckLogin},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/merchant/add",
					Handler: merchant.AddMerchantHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/update",
					Handler: merchant.ModifyMerchantHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/merchant/list",
					Handler: merchant.GetMerchantListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/reset-pwd",
					Handler: merchant.ResetMerchantPwdHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/update-pwd",
					Handler: merchant.UpdateMerchantPwdHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/modify-pay-pwd",
					Handler: merchant.ModifyMerchantPayPwdHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/reset-totp-secret",
					Handler: merchant.ResetMerchantTotpSecretHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/enable",
					Handler: merchant.EnableMerchantHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/modify-balance",
					Handler: merchant.ModifyMerchantBalanceHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/merchant/bank-card/list",
					Handler: merchant.GetMerchantBankCardListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/platfrom/channel-name/list",
					Handler: merchant.GetPlatformChannelNameListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/channel/add",
					Handler: merchant.AddMerchantChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/merchant/channel/list",
					Handler: merchant.GetMerchantChannelListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/channel/modify",
					Handler: merchant.ModifyMerchantChannelRateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/channel/enable",
					Handler: merchant.EnableMerchantChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/channel/delete",
					Handler: merchant.DeleteMerchantChannelHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/merchant/channel-upstream/list",
					Handler: merchant.GetMerchantChannelUpstreamListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/channel-upstream/save",
					Handler: merchant.SaveMerchantChannelUpstreamHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/merchant/withdraw/config",
					Handler: merchant.GetMerchantWithdrawConfigHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/withdraw-config/add",
					Handler: merchant.AddMerchantWithdrawConfigHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/withdraw-config/modify",
					Handler: merchant.ModifyMerchantWithdrawConfigHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/merchant/wallet-log/list",
					Handler: merchant.GetMerchantWalletLogListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/merchant/ip-whitelist/update",
					Handler: merchant.UpdateMerchantIpWhitelistHandler(serverCtx),
				},
			}...,
		),
	)

	engine.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckLogin},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/order/pay/list",
					Handler: order.GetPayOrderListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/order/pay/detail",
					Handler: order.GetPayOrderDetailHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/order/transfer/list",
					Handler: order.GetTransferOrderListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/order/transfer/detail",
					Handler: order.GetTransferOrderDetailHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/order/merchant-recharge/list",
					Handler: order.GetMerchantRechargeOrderListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/merchant-recharge/audit",
					Handler: order.MerchantRechargeOrderAuditHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/order/merchant-withdraw/list",
					Handler: order.GetMerchantWithdrawOrderListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/merchant-withdraw/audit",
					Handler: order.MerchantWithdrawOrderAuditHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/merchant-withdraw/success",
					Handler: order.MerchantWithdrawSuccessHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/up-channel/transfer/list",
					Handler: order.UpTransferChannelListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/merchant-withdraw/allot",
					Handler: order.WithdrawOrderAllotHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/pay/notify",
					Handler: order.PayOrderNotifyHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/transfer/notify",
					Handler: order.TransferOrderNotifyHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/pay-test/modify-status",
					Handler: order.ModifyPayTestOrderStatusHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/order/transfer-test/modify-status",
					Handler: order.ModifyTransferTestOrderStatusHandler(serverCtx),
				},
			}...,
		),
	)

	engine.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckLogin},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/logout",
					Handler: public.LogoutHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/upload/image",
					Handler: public.UploadImageHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/currency/list",
					Handler: public.GetCurrencyListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/site-config/save",
					Handler: public.SaveSiteConfigHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/site-config",
					Handler: public.GetSiteConfigHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/other-config",
					Handler: public.GetOtherConfigHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/other-config/save",
					Handler: public.SaveOtherConfigHandler(serverCtx),
				},
			}...,
		),
	)

	engine.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CheckLogin},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/order/pay/export",
					Handler: export.PayOrderExportHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/order/transfer/export",
					Handler: export.TransferOrderExportHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/merchant/wallet-log/export",
					Handler: export.WalletLogExportHandler(serverCtx),
				},
			}...,
		),
	)
}
